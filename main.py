from fastapi import FastAPI, Response
from fastapi.staticfiles import StaticFiles
from fastapi.responses import FileResponse
import os


app = FastAPI(title="Only Legend")

# Mount static files to a subdirectory like /static
app.mount('/static', StaticFiles(directory='static'), name='static')

# Кэш для медиафайлов
CACHE = {}

def load_media_to_cache():
    """Загружает медиафайлы в оперативную память при старте приложения."""
    files_to_cache = ['static/240901/5.webp',
 'static/240901/9.webp',
 'static/240901/8.webp',
 'static/240901/4.webp',
 'static/240901/3.webp',
 'static/240901/2.webp',
 'static/240901/1.webp',
 'static/240901/7.webp',
 'static/240901/6.webp',
 'static/230701/5.webp',
 'static/230701/6.mp4',
 'static/230701/8.webp',
 'static/230701/1.mp4',
 'static/230701/4.webp',
 'static/230701/2.mp4',
 'static/230701/3.webp',
 'static/230701/6.MOV',
 'static/230701/2.MOV',
 'static/230701/2.webp',
 'static/230701/1.webp',
 'static/230701/7.webp',
 'static/230701/6.webp',
 'static/231025/1.mp4',
 'static/231025/4.webp',
 'static/231025/2.mp4',
 'static/231025/3.mp4',
 'static/231025/2.webp',
 'static/231025/1.webp',
 'static/231025/5.jpeg',
 'static/231025/3.jpeg',
 'static/231014/5.webp',
 'static/231014/4.webp',
 'static/231014/3.webp',
 'static/231014/6.jpeg',
 'static/231014/2.MOV',
 'static/231014/7.jpeg',
 'static/231014/2.webp',
 'static/231014/1.MOV',
 'static/231014/1.webp',
 'static/221023/5.webp',
 'static/221023/9.webp',
 'static/221023/8.webp',
 'static/221023/1.mp4',
 'static/221023/4.webp',
 'static/221023/2.mp4',
 'static/221023/3.webp',
 'static/221023/2.webp',
 'static/221023/1.webp',
 'static/221023/7.webp',
 'static/221023/6.webp',
 'static/230308/4.webp',
 'static/230308/6.jpeg',
 'static/230308/2.webp',
 'static/230308/1.MOV',
 'static/230308/8.jpeg',
 'static/230308/1.webp',
 'static/230308/5.jpeg',
 'static/230308/7.webp',
 'static/230308/3.jpeg',
 'static/230901/4.MOV',
 'static/230901/5.MOV',
 'static/230901/6.MOV',
 'static/230901/2.MOV',
 'static/230901/3.MOV',
 'static/230323/5.webp',
 'static/230323/9.webp',
 'static/230323/8.webp',
 'static/230323/1.mp4',
 'static/230323/4.webp',
 'static/230323/13.webp',
 'static/230323/3.webp',
 'static/230323/2.webp',
 'static/230323/12.webp',
 'static/230323/1.webp',
 'static/230323/11.webp',
 'static/230323/10.webp',
 'static/230323/7.webp',
 'static/230323/6.webp',
 'static/230324/5.webp',
 'static/230324/9.webp',
 'static/230324/8.webp',
 'static/230324/1.mp4',
 'static/230324/4.webp',
 'static/230324/2.mp4',
 'static/230324/3.mp4',
 'static/230324/3.webp',
 'static/230324/2.webp',
 'static/230324/1.webp',
 'static/230324/10.webp',
 'static/230324/7.webp',
 'static/230324/6.webp',
 'static/231030/1.mp4',
 'static/231030/4.MOV',
 'static/231030/3.webp',
 'static/231030/2.MOV',
 'static/231030/2.webp',
 'static/231030/3.MOV',
 'static/231030/1.webp',
 'static/220912/5.webp',
 'static/220912/8.webp',
 'static/220912/1.mp4',
 'static/220912/2.mp4',
 'static/220912/2.webp',
 'static/220912/4.jpeg',
 'static/220912/1.webp',
 'static/220912/9.jpeg',
 'static/220912/7.webp',
 'static/220912/6.webp',
 'static/220912/3.jpeg',
 'static/221001/1.mp4',
 'static/221001/4.webp',
 'static/221001/2.mp4',
 'static/221001/3.webp',
 'static/221001/2.webp',
 'static/221001/1.webp',
 'static/221001/5.jpeg',
 'static/221001/6.webp',
 'static/210913/1.mp4',
 'static/210913/1.jpeg',
 'static/210913/2.mp4',
 'static/210913/3.mp4',
 'static/221203/4.mp4',
 'static/221203/5.mp4',
 'static/221203/1.mp4',
 'static/221203/1.jpeg',
 'static/221203/4.webp',
 'static/221203/2.mp4',
 'static/221203/3.webp',
 'static/221203/3.MOV',
 'static/221203/4.jpeg',
 'static/221203/5.jpeg',
 'static/221203/2.jpeg',
 'static/241030/5.webp',
 'static/241030/9.webp',
 'static/241030/8.webp',
 'static/241030/4.webp',
 'static/241030/14.webp',
 'static/241030/13.webp',
 'static/241030/3.webp',
 'static/241030/2.webp',
 'static/241030/12.webp',
 'static/241030/1.MOV',
 'static/241030/1.webp',
 'static/241030/11.webp',
 'static/241030/10.webp',
 'static/241030/7.webp',
 'static/241030/6.webp',
 'static/220204/7.mp4',
 'static/220204/6.mp4',
 'static/220204/4.mp4',
 'static/220204/5.mp4',
 'static/220204/1.mp4',
 'static/220204/4.webp',
 'static/220204/2.mp4',
 'static/220204/3.mp4',
 'static/220204/3.webp',
 'static/220204/2.webp',
 'static/220204/1.webp',
 'static/241001/5.webp',
 'static/241001/4.mp4',
 'static/241001/1.mp4',
 'static/241001/4.webp',
 'static/241001/2.mp4',
 'static/241001/3.mp4',
 'static/241001/3.webp',
 'static/241001/1.webp',
 'static/241001/2.jpeg',
 'static/241001/6.webp',
 'static/220129-220203/5.webp',
 'static/220129-220203/8.webp',
 'static/220129-220203/1.mp4',
 'static/220129-220203/1.jpeg',
 'static/220129-220203/4.webp',
 'static/220129-220203/2.mp4',
 'static/220129-220203/3.mp4',
 'static/220129-220203/2.jpeg',
 'static/220129-220203/7.webp',
 'static/220129-220203/6.webp',
 'static/220129-220203/3.jpeg',
 'static/230205/4.mp4',
 'static/230205/1.mp4',
 'static/230205/2.mp4',
 'static/230205/3.mp4',
 'static/230205/3.webp',
 'static/230205/2.webp',
 'static/230205/1.webp',
 'static/220205/5.webp',
 'static/220205/9.webp',
 'static/220205/8.webp',
 'static/220205/4.webp',
 'static/220205/3.webp',
 'static/220205/7.jpeg',
 'static/220205/2.webp',
 'static/220205/1.webp',
 'static/220205/10.webp',
 'static/220205/6.webp',
 'static/240501/5.webp',
 'static/240501/8.webp',
 'static/240501/1.mp4',
 'static/240501/4.webp',
 'static/240501/3.webp',
 'static/240501/2.MOV',
 'static/240501/2.webp',
 'static/240501/1.webp',
 'static/240501/7.webp',
 'static/240501/6.webp',
 'static/220212/5.webp',
 'static/220212/9.webp',
 'static/220212/8.webp',
 'static/220212/1.mp4',
 'static/220212/4.webp',
 'static/220212/2.mp4',
 'static/220212/3.mp4',
 'static/220212/3.webp',
 'static/220212/7.jpeg',
 'static/220212/2.webp',
 'static/220212/8.jpeg',
 'static/220212/4.jpeg',
 'static/220212/1.webp',
 'static/220212/11.webp',
 'static/220212/10.webp',
 'static/220212/5.jpeg',
 'static/220212/2.jpeg',
 'static/220212/7.webp',
 'static/220212/6.webp',
 'static/220212/3.jpeg',
 'static/240902/5.webp',
 'static/240902/4.webp',
 'static/240902/4.MOV',
 'static/240902/3.webp',
 'static/240902/2.MOV',
 'static/240902/2.webp',
 'static/240902/3.MOV',
 'static/240902/1.MOV',
 'static/240902/1.webp',
 'static/240417/5.webp',
 'static/240417/8.webp',
 'static/240417/4.webp',
 'static/240417/3.webp',
 'static/240417/2.MOV',
 'static/240417/2.webp',
 'static/240417/1.MOV',
 'static/240417/1.webp',
 'static/240417/7.webp',
 'static/240417/6.webp',
 'static/221225/4.mp4',
 'static/221225/1.mp4',
 'static/221225/2.mp4',
 'static/221225/3.mp4',
 'static/221019/5.webp',
 'static/221019/4.webp',
 'static/221019/3.webp',
 'static/221019/2.webp',
 'static/221019/1.webp',
 'static/221019/6.webp',
 'static/220101/1.webp',
 'static/220101/2.jpeg',
 'static/221029/5.webp',
 'static/221029/4.mp4',
 'static/221029/5.mp4',
 'static/221029/1.mp4',
 'static/221029/1.jpeg',
 'static/221029/2.mp4',
 'static/221029/3.mp4',
 'static/221029/2.webp',
 'static/221029/4.jpeg',
 'static/221029/3.jpeg',
 'static/220911/5.webp',
 'static/220911/1.mp4',
 'static/220911/4.webp',
 'static/220911/2.mp4',
 'static/220911/3.webp',
 'static/220911/2.webp',
 'static/220911/1.webp',
 'static/220911/6.webp',
 'static/220311/9.webp',
 'static/220311/8.webp',
 'static/220311/1.jpeg',
 'static/220311/4.webp',
 'static/220311/3.webp',
 'static/220311/2.webp',
 'static/220311/11.webp',
 'static/220311/10.webp',
 'static/220311/5.jpeg',
 'static/220311/7.webp',
 'static/220311/6.webp',
 'static/240601/5.webp',
 'static/240601/4.webp',
 'static/240601/3.webp',
 'static/240601/2.MOV',
 'static/240601/2.webp',
 'static/240601/3.MOV',
 'static/240601/1.MOV',
 'static/240601/1.webp',
 'static/240601/6.webp',
 'static/200918/5.webp',
 'static/200918/9.webp',
 'static/200918/8.webp',
 'static/200918/4.webp',
 'static/200918/2.mp4',
 'static/200918/3.webp',
 'static/200918/2.webp',
 'static/200918/1.MOV',
 'static/200918/1.webp',
 'static/200918/10.webp',
 'static/200918/7.webp',
 'static/200918/6.webp',
 'static/240115/5.webp',
 'static/240115/4.webp',
 'static/240115/3.webp',
 'static/240115/2.MOV',
 'static/240115/2.webp',
 'static/240115/1.MOV',
 'static/240115/1.webp',
 'static/240115/7.webp',
 'static/240115/6.webp',
 'static/241201/5.webp',
 'static/241201/4.webp',
 'static/241201/3.webp',
 'static/241201/2.webp',
 'static/241201/1.webp',
 'static/241201/7.webp',
 'static/241201/6.webp',
 'static/221124/5.webp',
 'static/221124/9.webp',
 'static/221124/8.webp',
 'static/221124/1.mp4',
 'static/221124/4.webp',
 'static/221124/3.webp',
 'static/221124/2.webp',
 'static/221124/1.webp',
 'static/221124/10.webp',
 'static/221124/7.webp',
 'static/221124/6.webp',
 'static/230801/4.webp',
 'static/230801/4.MOV',
 'static/230801/5.MOV',
 'static/230801/3.webp',
 'static/230801/6.MOV',
 'static/230801/2.MOV',
 'static/230801/2.webp',
 'static/230801/3.MOV',
 'static/230801/1.MOV',
 'static/230801/1.webp',
 'static/240512/5.webp',
 'static/240512/4.webp',
 'static/240512/3.webp',
 'static/240512/2.MOV',
 'static/240512/2.webp',
 'static/240512/3.MOV',
 'static/240512/1.MOV',
 'static/240512/1.webp',
 'static/240512/6.webp',
 'static/220126-220129/5.webp',
 'static/220126-220129/8.webp',
 'static/220126-220129/3.webp',
 'static/220126-220129/6.jpeg',
 'static/220126-220129/2.webp',
 'static/220126-220129/4.jpeg',
 'static/220126-220129/1.webp',
 'static/220126-220129/9.jpeg',
 'static/220126-220129/7.webp']
    for file_path in files_to_cache:
        if os.path.exists(file_path):
            with open(file_path, "rb") as f:
                CACHE[file_path] = f.read()
        else:
            print(f"Warning: {file_path} does not exist and will not be cached.")

@app.on_event("startup")
async def on_startup():
    """Действия при запуске приложения."""
    load_media_to_cache()
    print("Media files loaded into cache.")

@app.get('/')
def homepage():
    """Возвращает HTML-файл при переходе на корневой URL."""
    return FileResponse('static/test.html')

@app.get('/work-work')
def about():
    """Возвращает HTML-файл при переходе на корневой URL."""
    return FileResponse('static/index.html')

@app.get('/cached/{file_name:path}')
async def get_cached_file(file_name: str):
    """Отдает файл из кэша, если он там есть, иначе возвращает файл с диска."""
    file_path = f"static/{file_name}"
    if file_path in CACHE:
        ext = os.path.splitext(file_path)[1].lower()
        mime_type = {
            ".mp4": "video/mp4",
            ".mov": "video/quicktime",
            ".png": "image/png",
            ".webp": "image/webp"
        }.get(ext, "application/octet-stream")
        return Response(content=CACHE[file_path], media_type=mime_type)
    elif os.path.exists(file_path):
        return FileResponse(file_path)
    else:
        return Response(content="File not found", status_code=404)

@app.get('/cache')
def get_cached_file():
    len_ = len(CACHE.keys())
    return {len_ : str(list(CACHE.keys()))}

